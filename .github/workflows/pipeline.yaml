name: Deploy API to EC2

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build Docker image
      run: docker build -t api:latest ./api

    - name: Save Docker image to a file
      run: docker save api:latest -o api_latest.tar

    - name: Upload Docker image as artifact
      uses: actions/upload-artifact@v2
      with:
        name: api_latest
        path: api_latest.tar

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download Docker image artifact
      uses: actions/download-artifact@v2
      with:
        name: api_latest
        path: api_latest.tar

    - name: Install AWS CLI
      run: |
        sudo apt-get update
        sudo apt-get install -y awscli

    - name: Configure AWS credentials
      run: |
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws configure set default.region ${{ secrets.AWS_REGION }}

    - name: Deploy to EC2
      run: |
        scp -i ${{ secrets.EC2_KEY }} -o StrictHostKeyChecking=no api_latest.tar ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/api_latest.tar
        ssh -i ${{ secrets.EC2_KEY }} -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          docker load -i /home/${{ secrets.EC2_USER }}/api_latest.tar
          docker stop api || true
          docker rm api || true
          docker run -d --name api -p 8080:8080 api:latest
        EOF

